syntax = "proto3";

package proto;

option java_package = "com.hedera.hashgraph.proto";
option java_multiple_files = true;

import "proto/BasicTypes.proto";
import "proto/TransactionRecord.proto";
import "proto/QueryHeader.proto";
import "proto/ResponseHeader.proto";

option go_package = "github.com/hashgraph/hedera-sdk-go/proto";

/* Get all the records for a smart contract instance, for any function call (or the constructor call) during the last 25 hours, for which a Record was requested. */
message ContractGetRecordsQuery {
    QueryHeader header = 1; // Standard info sent from client to node, including the signed payment, and what kind of response is requested (cost, state proof, both, or neither).
    ContractID contractID = 2; // The smart contract instance for which the records should be retrieved
}

/* Response when the client sends the node ContractGetRecordsQuery */
message ContractGetRecordsResponse {
    ResponseHeader header = 1; //Standard response from node to client, including the requested fields: cost, or state proof, or both, or neither
    ContractID contractID = 2; // The smart contract instance that this record is for
    repeated TransactionRecord records = 3; // List of records, each with contractCreateResult or contractCallResult as its body
}
